
   email:  alex.cordova@libertymutual.com
password:  libertymutual123
username:  cordova69

test ssh:  ssh -T git@github.com
can disable SSL certs:  git config --global http.sslverify false

git push --set-upstream origin master

Enable a repo when you're in a directory you want it to be:

	git init  <== takes the name of the directory you're in
	git add <file> or git add .  #for all files in this directory
	git commit -m "message" <= for a message you can add -m "add message"
	git remote add origin https://github.com/cordova69/test.git
	git push -u origin master
	git add <file name>
	git reset HEAD <file>  <= to unstage	

...or push an existing repository

	git remote add origin git@github.com:<github.com/<git reponame>/actual repo.git>
	git push -u origin master  #if keys aren't setup you'll be prompted

	git commit -a -m "any message" <== skip staging and commits at the same time

	git log --oneline <== lists each commit in sigle lines
	git log --stat  <== in detailed view
	git log --patch <== full diff of the exact changes in each file with each commit.
	

	git rm <file>  <= staged file's removal and Git stopped tracking
	git rm <file> --cached 

	git checkout -b new_branch <== -b creates new branch and checksout to it
	git checkout master        <== just to switch, no -b

	git rm <file>   <== stop tracking
	git rm --cached <file>  <== removes from project but not delete file
	git mv <file>   <== renames file in project
	git stash <== takes your uncommitted changes (both staged and unstaged), 
		      saves them away for later use
	git stash list <== show what was stashed
	git stash show <== more detail
	git stash pop  <== pops it back to working directory
	
	git merge <== Git's way of putting a forked history back together again
	
	     reset allows commits from history into working area, or throw changes away
	git reset --sort  <== moves specific commits into staging
	git reset --mixed <== move changes to working direcotry
	git reset --hard  <== moves changes to the trash

	
